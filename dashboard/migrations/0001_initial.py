# Generated by Django 4.1.6 on 2023-10-11 19:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.CharField(default=uuid.UUID('ea1a4a78-02ea-4c39-b6c0-4e8577b0350c'), max_length=36, primary_key=True, serialize=False)),
                ('fullname', models.CharField(max_length=200)),
                ('muid', models.CharField(max_length=100, null=True)),
                ('email', models.CharField(max_length=200)),
                ('phone', models.CharField(max_length=15, unique=True)),
                ('qr_code', models.CharField(default=uuid.UUID('9e000055-1163-456a-80fa-b25fea307f1b'), max_length=36, unique=True)),
                ('role', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(default=False)),
                ('image', models.CharField(max_length=200)),
                ('game_over_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.CharField(default=uuid.UUID('3c3614dc-0a61-4de8-954c-9d46d880cdde'), max_length=36, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('group_order', models.IntegerField()),
                ('member_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'group',
            },
        ),
        migrations.CreateModel(
            name='Stalls',
            fields=[
                ('id', models.CharField(default=uuid.UUID('00181435-c6c0-4b72-a13e-8b37301dc39d'), max_length=36, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, null=True)),
                ('remarks', models.CharField(max_length=200, null=True)),
            ],
            options={
                'db_table': 'stalls',
            },
        ),
        migrations.CreateModel(
            name='SystemSettings',
            fields=[
                ('id', models.CharField(default=uuid.UUID('381fc871-387f-4739-944a-9b4aa71c8b71'), max_length=36, primary_key=True, serialize=False)),
                ('key', models.CharField(max_length=50, null=True)),
                ('value', models.CharField(max_length=50, null=True)),
            ],
            options={
                'db_table': 'system_settings',
            },
        ),
        migrations.CreateModel(
            name='UserStallLink',
            fields=[
                ('id', models.CharField(default=uuid.UUID('fe2a8bed-f446-46e9-95d1-b792b35b7f76'), max_length=36, primary_key=True, serialize=False)),
                ('rating', models.IntegerField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('stall', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_stall_link_stall', to='dashboard.stalls')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_stall_link_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_stall_link',
            },
        ),
        migrations.CreateModel(
            name='Treasures',
            fields=[
                ('id', models.CharField(default=uuid.UUID('886c93ff-16a7-4813-b1a6-923351db0536'), max_length=36, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=50)),
                ('is_claimed', models.BooleanField(default=False)),
                ('winner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='treasures_winner', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'treasures',
            },
        ),
        migrations.CreateModel(
            name='TreasureLog',
            fields=[
                ('id', models.CharField(default=uuid.UUID('3cae4f0e-b859-48fa-9f65-29d05464ef21'), max_length=36, primary_key=True, serialize=False)),
                ('is_claimed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('treasure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treasure_log_treasure', to='dashboard.treasures')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treasure_log_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'treasure_log',
            },
        ),
        migrations.CreateModel(
            name='ScanLog',
            fields=[
                ('id', models.CharField(default=uuid.UUID('f8df2681-2352-4670-a3c4-63000caac66a'), max_length=36, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('scanned_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scan_log_scanned_by', to=settings.AUTH_USER_MODEL)),
                ('scanned_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scan_log_scanned_to', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'scan_log',
            },
        ),
        migrations.CreateModel(
            name='LearningStation',
            fields=[
                ('id', models.CharField(default=uuid.UUID('9c5aa2a9-3477-42e8-8bb6-93e55dd3bc65'), max_length=36, primary_key=True, serialize=False)),
                ('ai', models.DateTimeField(default=None, null=True)),
                ('web', models.DateTimeField(default=None, null=True)),
                ('ux', models.DateTimeField(default=None, null=True)),
                ('bc', models.DateTimeField(default=None, null=True)),
                ('iot', models.DateTimeField(default=None, null=True)),
                ('vr', models.DateTimeField(default=None, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='learning_station_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'learning_station',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_group', to='dashboard.group'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
