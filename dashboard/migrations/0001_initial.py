# Generated by Django 4.1.6 on 2023-11-24 17:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('id', models.CharField(default=uuid.UUID('5957f3fa-0bfa-4f4f-b59b-f6af9c5691d0'), max_length=36, primary_key=True, serialize=False)),
                ('fullname', models.CharField(max_length=200)),
                ('muid', models.CharField(max_length=100, null=True)),
                ('email', models.CharField(max_length=200, unique=True)),
                ('phone', models.CharField(max_length=15, unique=True)),
                ('qr_code', models.CharField(default=uuid.UUID('8449e3f0-4c73-4636-a7a0-98b1639ea6b3'), max_length=36, unique=True)),
                ('role', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(default=False)),
                ('image', models.CharField(max_length=200, null=True)),
                ('game_over_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_permenent', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.CharField(default=uuid.UUID('787378e4-c507-4561-a8c7-1f4e5eccee54'), max_length=36, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('group_order', models.IntegerField()),
                ('member_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'group',
            },
        ),
        migrations.CreateModel(
            name='SystemSettings',
            fields=[
                ('id', models.CharField(default=uuid.UUID('3ca35a69-e371-446a-ba86-9a85fd06bd0e'), max_length=36, primary_key=True, serialize=False)),
                ('key', models.CharField(max_length=50, null=True)),
                ('value', models.CharField(max_length=50, null=True)),
            ],
            options={
                'db_table': 'system_settings',
            },
        ),
        migrations.CreateModel(
            name='Treasures',
            fields=[
                ('id', models.CharField(default=uuid.UUID('29d2f95f-a40d-4aee-a991-2573bff7e8ca'), max_length=36, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=50)),
                ('is_claimed', models.BooleanField(default=False)),
                ('winner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='treasures_winner', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'treasures',
            },
        ),
        migrations.CreateModel(
            name='TreasureLog',
            fields=[
                ('id', models.CharField(default=uuid.UUID('9d151f2c-cbbc-4099-ab84-cf9e1690a67d'), max_length=36, primary_key=True, serialize=False)),
                ('is_claimed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('treasure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treasure_log_treasure', to='dashboard.treasures')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treasure_log_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'treasure_log',
            },
        ),
        migrations.CreateModel(
            name='ScanLog',
            fields=[
                ('id', models.CharField(default=uuid.UUID('8dd84759-f010-4d26-8dbc-bb6391bda975'), max_length=36, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user1', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scan_log_user1', to=settings.AUTH_USER_MODEL)),
                ('user2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scan_log_user2', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'scan_log',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_group', to='dashboard.group'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
